.TH "Camera" 3 "Martes, 26 de Mayo de 2015" "Pistasdeprofunidad" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Camera \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Camera\&.h>\fP
.SS "M칠todos p칰blicos"

.in +1c
.ti -1c
.RI "\fBCamera\fP ()"
.br
.ti -1c
.RI "glm::mat4 \fBSetPerspective\fP (float fov, float aspectRatio, float nearPlane, float farPlane)"
.br
.ti -1c
.RI "glm::mat4 \fBGetProjectionMatrix\fP ()"
.br
.ti -1c
.RI "glm::mat4 \fBGetViewMatrix\fP ()"
.br
.ti -1c
.RI "void \fBSetPosition\fP (glm::vec3 position)"
.br
.ti -1c
.RI "glm::vec3 \fBGetPosition\fP ()"
.br
.ti -1c
.RI "glm::vec3 \fBGetView\fP ()"
.br
.ti -1c
.RI "float \fBGetYaw\fP ()"
.br
.ti -1c
.RI "void \fBSetYaw\fP (float yaw)"
.br
.ti -1c
.RI "float \fBGetPitch\fP ()"
.br
.ti -1c
.RI "void \fBSetPitch\fP (float pitch)"
.br
.ti -1c
.RI "void \fBSetSpeed\fP (double speed)"
.br
.ti -1c
.RI "double \fBGetSpeed\fP ()"
.br
.ti -1c
.RI "void \fBPositionCamera\fP (float positionX, float positionY, float positionZ, float yaw, float pitch)"
.br
.ti -1c
.RI "glm::mat4 \fBGetRotationMatrix\fP ()"
.br
.ti -1c
.RI "void \fBMoveCamera\fP (float speed, glm::vec3 viewVector)"
.br
.ti -1c
.RI "void \fBSetViewByMouse\fP (float mouseX, float mouseY)"
.br
.in -1c
.SS "Atributos protegidos"

.in +1c
.ti -1c
.RI "glm::mat4 \fBProjectionMatrix\fP"
.br
.ti -1c
.RI "glm::vec3 \fBPosition\fP"
.br
.ti -1c
.RI "float \fBSpeed\fP = 1\&.0"
.br
.ti -1c
.RI "double \fBMouseSpeed\fP = 0\&.001"
.br
.ti -1c
.RI "float \fBYaw\fP = 0"
.br
.ti -1c
.RI "float \fBPitch\fP = 0"
.br
.in -1c
.SH "Descripci칩n detallada"
.PP 
Clase que maneja los eventos del usuario, en nuestra escena 3D\&. 
.PP
Definici칩n en la l칤nea 14 del archivo Camera\&.h\&.
.SH "Documentaci칩n del constructor y destructor"
.PP 
.SS "Camera::Camera ()"
Constructor defualt\&. 
.PP
Definici칩n en la l칤nea 4 del archivo Camera\&.cpp\&.
.PP
Hace referencia a Position\&.
.SH "Documentaci칩n de las funciones miembro"
.PP 
.SS "float Camera::GetPitch ()\fC [inline]\fP"
Obtiene el angulo de rotaci蚤 vertical de la c炅ara\&. 
.PP
\fBDevuelve:\fP
.RS 4
Angulo de rotaci蚤 vertical de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 86 del archivo Camera\&.h\&.
.PP
Hace referencia a Pitch\&.
.SS "glm::vec3 Camera::GetPosition ()\fC [inline]\fP"
Obtiene la posici蚤 de la c炅ara\&. 
.PP
\fBDevuelve:\fP
.RS 4

.RE
.PP

.PP
Definici칩n en la l칤nea 58 del archivo Camera\&.h\&.
.PP
Hace referencia a Position\&.
.PP
Referenciado por ModelEnvironment::Render() y Model::Render()\&.
.SS "glm::mat4 Camera::GetProjectionMatrix ()\fC [inline]\fP"
Obtiene la matriz de proyecci蚤\&. 
.PP
\fBDevuelve:\fP
.RS 4
Matriz de proyecci蚤 
.RE
.PP

.PP
Definici칩n en la l칤nea 37 del archivo Camera\&.h\&.
.PP
Hace referencia a ProjectionMatrix\&.
.PP
Referenciado por ModelEnvironment::Render(), SkyBoxModel::Render() y Model::Render()\&.
.SS "glm::mat4 Camera::GetRotationMatrix ()"
Obtiene la matriz de rotaci蚤 de la c炅ara, de las rotaciones yaw y pitch\&. 
.PP
\fBDevuelve:\fP
.RS 4
Matriz de rotaci蚤 de la c炅ara\&.
.RE
.PP
Obtiene la matriz de rotaci蚤 de la c炅ara, a travez de las rotaciones yaw y pitch\&. 
.PP
\fBDevuelve:\fP
.RS 4
Matriz de rotaci蚤 de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 42 del archivo Camera\&.cpp\&.
.PP
Hace referencia a f, Pitch y Yaw\&.
.PP
Referenciado por GetViewMatrix()\&.
.SS "double Camera::GetSpeed ()\fC [inline]\fP"
Obtiene la velocidad de la c炅ara\&. 
.PP
\fBDevuelve:\fP
.RS 4
Velocidad de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 108 del archivo Camera\&.h\&.
.PP
Hace referencia a Speed\&.
.PP
Referenciado por InputManager::KeyPressed()\&.
.SS "glm::vec3 Camera::GetView ()"
Metodo que obtiene el vector de vista de la matriz de rotaci蚤\&. 
.PP
\fBDevuelve:\fP
.RS 4

.RE
.PP

.PP
Definici칩n en la l칤nea 62 del archivo Camera\&.cpp\&.
.SS "glm::mat4 Camera::GetViewMatrix ()"
Obtiene la actual matriz de vista de acuerdo a la posici蚤 de la c炅ara y rotaci蚤 de esta\&. 
.PP
\fBDevuelve:\fP
.RS 4
Matriz de vista\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 53 del archivo Camera\&.cpp\&.
.PP
Hace referencia a GetRotationMatrix() y Position\&.
.PP
Referenciado por ModelEnvironment::Render(), SkyBoxModel::Render() y Model::Render()\&.
.SS "float Camera::GetYaw ()\fC [inline]\fP"
Obtiene el angulo de rotaci蚤 horizontal de la c炅ara\&. 
.PP
\fBDevuelve:\fP
.RS 4
Angulo de rotaci蚤 horizontal de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 72 del archivo Camera\&.h\&.
.PP
Hace referencia a Yaw\&.
.SS "void Camera::MoveCamera (floatspeed, glm::vec3viewVector)"
M俸odo que mueve la c炅ara hacia atras o adelanate dependiendo de la velocidad de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIspeed\fP Velocidad de la c炅ara\&. 
.br
\fIviewVector\fP Direci蚤 de vista de la c炅ara\&.
.RE
.PP
M俸odo que mueve la c炅ara hacia atras, adelanate, izquierda, derecha, arriba y abajo dependiendo de la velocidad de la c炅ara y el vector de movimiento\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIspeed\fP Velocidad de la c炅ara\&. 
.br
\fIviewVector\fP Direcci蚤 de vista de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 72 del archivo Camera\&.cpp\&.
.PP
Hace referencia a Position\&.
.PP
Referenciado por InputManager::KeyPressed()\&.
.SS "void Camera::PositionCamera (floatpositionX, floatpositionY, floatpositionZ, floatyaw, floatpitch)"
Coloca la posici蚤, rotaciones (yaw y pitch en radianes) de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIpositionX\fP Posici蚤 en X\&. 
.br
\fIpositionY\fP Posici蚤 en Y\&. 
.br
\fIpositionZ\fP Posici蚤 en Z 
.br
\fIyaw\fP Angulo de rotaci蚤 horizontal de la c炅ara 
.br
\fIpitch\fP Angulo de rotaci蚤 vertical de la c炅ara 
.RE
.PP

.PP
Definici칩n en la l칤nea 31 del archivo Camera\&.cpp\&.
.PP
Hace referencia a Pitch, Position y Yaw\&.
.PP
Referenciado por GLApplication::Initialize()\&.
.SS "glm::mat4 Camera::SetPerspective (floatfov, floataspectRatio, floatnearPlane, floatfarPlane)"
Setter de la matriz de perspectiva esta es construida del fiel of fiew, aspect ratio y planos near/far\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIfov\fP Fiel of fiew\&. 
.br
\fIaspectRatio\fP Aspect ratio\&. 
.br
\fInearPlane\fP Near plane\&. 
.br
\fIfarPlane\fP Far plnae\&. 
.RE
.PP
\fBDevuelve:\fP
.RS 4
.RE
.PP

.PP
Definici칩n en la l칤nea 16 del archivo Camera\&.cpp\&.
.PP
Hace referencia a ProjectionMatrix\&.
.PP
Referenciado por GLApplication::Initialize() y GLFWManager::ReshapeGL()\&.
.SS "void Camera::SetPitch (floatpitch)\fC [inline]\fP"
Setter del angulo de rotaci蚤 vertical de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIpitch\fP Angulo de rotaci蚤 vertical de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 93 del archivo Camera\&.h\&.
.PP
Hace referencia a Pitch\&.
.SS "void Camera::SetPosition (glm::vec3position)\fC [inline]\fP"
Setter de la posici蚤 de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIposition\fP 
.RE
.PP

.PP
Definici칩n en la l칤nea 51 del archivo Camera\&.h\&.
.PP
Hace referencia a Position\&.
.SS "void Camera::SetSpeed (doublespeed)\fC [inline]\fP"
Setter de la velocidad de los movimientos de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIspeed\fP Velocidad de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 101 del archivo Camera\&.h\&.
.PP
Hace referencia a Speed\&.
.SS "void Camera::SetViewByMouse (floatxOffset, floatyOffset)"
Settea los valor de pitch an yaw a la c炅ara y los deltas para el siguiente frame\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fImouseX\fP Movimiento en X\&. 
.br
\fImouseY\fP Movimiento en Y
.RE
.PP
Setter de los valor pitch an yaw de la c炅ara y los deltas para el siguiente frame\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fImouseX\fP Movimiento en X\&. 
.br
\fImouseY\fP Movimiento en Y 
.RE
.PP

.PP
Definici칩n en la l칤nea 84 del archivo Camera\&.cpp\&.
.PP
Hace referencia a f, MouseSpeed, PI, Pitch y Yaw\&.
.PP
Referenciado por InputManager::MouseMoved()\&.
.SS "void Camera::SetYaw (floatyaw)\fC [inline]\fP"
Obtiene el angulo de rotaci蚤 horizontal de la c炅ara\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIyaw\fP Angulo de rotaci蚤 horizontal de la c炅ara\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 79 del archivo Camera\&.h\&.
.PP
Hace referencia a Yaw\&.
.SH "Documentaci칩n de los datos miembro"
.PP 
.SS "double Camera::MouseSpeed = 0\&.001\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 154 del archivo Camera\&.h\&.
.PP
Referenciado por SetViewByMouse()\&.
.SS "float Camera::Pitch = 0\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 158 del archivo Camera\&.h\&.
.PP
Referenciado por GetPitch(), GetRotationMatrix(), PositionCamera(), SetPitch() y SetViewByMouse()\&.
.SS "glm::vec3 Camera::Position\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 149 del archivo Camera\&.h\&.
.PP
Referenciado por Camera(), GetPosition(), GetViewMatrix(), MoveCamera(), PositionCamera() y SetPosition()\&.
.SS "glm::mat4 Camera::ProjectionMatrix\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 147 del archivo Camera\&.h\&.
.PP
Referenciado por GetProjectionMatrix() y SetPerspective()\&.
.SS "float Camera::Speed = 1\&.0\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 152 del archivo Camera\&.h\&.
.PP
Referenciado por GetSpeed() y SetSpeed()\&.
.SS "float Camera::Yaw = 0\fC [protected]\fP"

.PP
Definici칩n en la l칤nea 156 del archivo Camera\&.h\&.
.PP
Referenciado por GetRotationMatrix(), GetYaw(), PositionCamera(), SetViewByMouse() y SetYaw()\&.

.SH "Autor"
.PP 
Generado autom치ticamente por Doxygen para Pistasdeprofunidad del c칩digo fuente\&.
