.TH "SkyBoxModel" 3 "Martes, 26 de Mayo de 2015" "Pistasdeprofunidad" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SkyBoxModel \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SkyBoxModel\&.h>\fP
.SS "M칠todos p칰blicos"

.in +1c
.ti -1c
.RI "\fBSkyBoxModel\fP ()"
.br
.ti -1c
.RI "\fB~SkyBoxModel\fP ()"
.br
.ti -1c
.RI "void \fBInitialize\fP (const std::string &Directory, const std::string &PosXFilename, const std::string &NegXFilename, const std::string &PosYFilename, const std::string &NegYFilename, const std::string &PosZFilename, const std::string &NegZFilename, std::string strVertex, std::string strFragment)"
.br
.ti -1c
.RI "\fBCamera\fP * \fBGetCamera\fP ()"
.br
.ti -1c
.RI "void \fBSetCamera\fP (\fBCamera\fP *\fBpCamera\fP)"
.br
.ti -1c
.RI "void \fBRender\fP (glm::mat4 rootMatrix)"
.br
.ti -1c
.RI "vec3 \fBGetPosition\fP ()"
.br
.ti -1c
.RI "void \fBSetPosition\fP (vec3 position)"
.br
.ti -1c
.RI "vec3 \fBGetRotation\fP ()"
.br
.ti -1c
.RI "void \fBSetRotation\fP (vec3 rotation)"
.br
.ti -1c
.RI "vec3 \fBGetScale\fP ()"
.br
.ti -1c
.RI "void \fBSetScale\fP (vec3 scale)"
.br
.ti -1c
.RI "\fBCubemapTexture\fP * \fBGetCubeTextureMap\fP ()"
.br
.ti -1c
.RI "void \fBDestroy\fP ()"
.br
.in -1c
.SS "Atributos privados"

.in +1c
.ti -1c
.RI "GLuint \fBVertexArrayObjectId\fP"
.br
.ti -1c
.RI "vec3 \fBPosition\fP"
.br
.ti -1c
.RI "vec3 \fBRotation\fP"
.br
.ti -1c
.RI "vec3 \fBScale\fP"
.br
.ti -1c
.RI "\fBMesh::Mesh\fP * \fBm_pMesh\fP"
.br
.ti -1c
.RI "\fBShader\fP \fBshader\fP"
.br
.ti -1c
.RI "\fBCamera\fP * \fBcamera\fP"
.br
.ti -1c
.RI "\fBCubemapTexture\fP * \fBcubemapTexture\fP"
.br
.in -1c
.SH "Descripci칩n detallada"
.PP 
Clase encarga da crear el modelo del skybox, inicializar, renderizar y liberar memoria del skybox de la escena\&. 
.PP
Definici칩n en la l칤nea 23 del archivo SkyBoxModel\&.h\&.
.SH "Documentaci칩n del constructor y destructor"
.PP 
.SS "SkyBoxModel::SkyBoxModel ()\fC [inline]\fP"
Constructor, inicializa el modelo con un tipo de primitiva y el archivo de textura\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fImode\fP Primitva de renderizaci蚤\&. 
.br
\fIFileName\fP Nombre de textura\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 30 del archivo SkyBoxModel\&.h\&.
.SS "SkyBoxModel::~SkyBoxModel ()\fC [inline]\fP"
Libera la memoria que utiliza el modelo\&. 
.PP
Definici칩n en la l칤nea 35 del archivo SkyBoxModel\&.h\&.
.SH "Documentaci칩n de las funciones miembro"
.PP 
.SS "void SkyBoxModel::Destroy ()"
Libera lo VBOs y VAOs que utiliza el modelo\&. 
.PP
Definici칩n en la l칤nea 119 del archivo SkyBoxModel\&.cpp\&.
.PP
Hace referencia a camera, cubemapTexture, Shader::Destroy(), shader y VertexArrayObjectId\&.
.PP
Referenciado por GLApplication::Destroy()\&.
.SS "\fBCamera\fP* SkyBoxModel::GetCamera ()\fC [inline]\fP"
Obtiene la c炅ara y tener acceso a las matrices de vista y proyecci蚤\&. 
.PP
\fBDevuelve:\fP
.RS 4

.RE
.PP

.PP
Definici칩n en la l칤nea 63 del archivo SkyBoxModel\&.h\&.
.SS "\fBCubemapTexture\fP* SkyBoxModel::GetCubeTextureMap ()\fC [inline]\fP"
Obtiene la textura con la que se creo el skybox\&. 
.PP
\fBDevuelve:\fP
.RS 4

.RE
.PP

.PP
Definici칩n en la l칤nea 130 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por GLApplication::ApplicationLoop()\&.
.SS "vec3 SkyBoxModel::GetPosition ()\fC [inline]\fP"
Obtiene la posici蚤 del modelo\&. 
.PP
\fBDevuelve:\fP
.RS 4

.RE
.PP

.PP
Definici칩n en la l칤nea 85 del archivo SkyBoxModel\&.h\&.
.SS "vec3 SkyBoxModel::GetRotation ()\fC [inline]\fP"
Obtiene la rotaci蚤 del modelo\&. 
.PP
\fBDevuelve:\fP
.RS 4
Rotaci蚤 del modelo\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 100 del archivo SkyBoxModel\&.h\&.
.SS "vec3 SkyBoxModel::GetScale ()\fC [inline]\fP"
Obtiene la escala del objeto\&. 
.PP
\fBDevuelve:\fP
.RS 4
Escala de objeto\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 115 del archivo SkyBoxModel\&.h\&.
.SS "void SkyBoxModel::Initialize (const std::string &Directory, const std::string &PosXFilename, const std::string &NegXFilename, const std::string &PosYFilename, const std::string &NegYFilename, const std::string &PosZFilename, const std::string &NegZFilename, std::stringstrVertex, std::stringstrFragment)"
Inicializaci蚤 del modelo, si antes de la inicializaci蚤 se le pasa un Objeto \fBMesh::Mesh\fP, la inicializaci蚤 la delegara a Assimp\&. Del mismo modo si se le settea antes de la llamada a este metodo luces, valida que los shaders este configurados para la iluminaci蚤\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIvertices\fP Vertices del modelo\&. 
.br
\fIIndexData\fP Indices del modelo\&. 
.br
\fIlength\fP Tama絪 de Vertices\&. 
.br
\fIindexLength\fP Tama絪 de indices\&. 
.br
\fIstrVertex\fP Nombre del archivo del vertex \fBShader\fP que se asocia al modelo\&. 
.br
\fIstrFragment\fP Nombre del archivo Fragment \fBShader\fP que se asocia al modelo\&.
.RE
.PP
Clase encarga da crear el modelo del skybox, inicializar, renderizar y liberar memoria del skybox de la escena\&. 
.PP
Definici칩n en la l칤nea 14 del archivo SkyBoxModel\&.cpp\&.
.PP
Hace referencia a cubemapTexture, Shader::GetVariable(), Shader::Initialize(), CubemapTexture::Load(), Mesh::Mesh::LoadMesh(), m_pMesh, shader, Shader::TurnOff(), Shader::TurnOn() y VertexArrayObjectId\&.
.PP
Referenciado por GLApplication::Initialize()\&.
.SS "void SkyBoxModel::Render (glm::mat4rootMatrix)"
Renderiza el modelo del skybox\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIparentModelMatrix\fP Matrix de herencia, si no se requiere herenc眼 Se debe enviar una matriz unitaria\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 62 del archivo SkyBoxModel\&.cpp\&.
.PP
Hace referencia a CubemapTexture::Bind(), camera, cubemapTexture, Camera::GetProjectionMatrix(), Shader::GetVariable(), Camera::GetViewMatrix(), m_pMesh, Position, Mesh::Mesh::Render(), Rotation, Scale, Shader::SetMatrix4(), shader, Shader::TurnOff(), Shader::TurnOn() y VertexArrayObjectId\&.
.PP
Referenciado por GLApplication::ApplicationLoop()\&.
.SS "void SkyBoxModel::SetCamera (\fBCamera\fP *pCamera)\fC [inline]\fP"
Settea una c炅ara al modelo\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIpCamera\fP c炅ara del modelo\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 70 del archivo SkyBoxModel\&.h\&.
.PP
Hace referencia a pCamera\&.
.PP
Referenciado por GLApplication::Initialize()\&.
.SS "void SkyBoxModel::SetPosition (vec3position)\fC [inline]\fP"
Setter de la posici蚤 del modelo\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIposition\fP Posici蚤 del modelo\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 92 del archivo SkyBoxModel\&.h\&.
.SS "void SkyBoxModel::SetRotation (vec3rotation)\fC [inline]\fP"
Setter para la rotaci蚤 del modelo\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIrotation\fP Rotaci蚤 del modelo\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 107 del archivo SkyBoxModel\&.h\&.
.SS "void SkyBoxModel::SetScale (vec3scale)\fC [inline]\fP"
Setter de la escala del objeto\&. 
.PP
\fBPar치metros:\fP
.RS 4
\fIEscala\fP de objeto\&. 
.RE
.PP

.PP
Definici칩n en la l칤nea 122 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por GLApplication::ApplicationLoop()\&.
.SH "Documentaci칩n de los datos miembro"
.PP 
.SS "\fBCamera\fP* SkyBoxModel::camera\fC [private]\fP"

.PP
Definici칩n en la l칤nea 147 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Destroy() y Render()\&.
.SS "\fBCubemapTexture\fP* SkyBoxModel::cubemapTexture\fC [private]\fP"

.PP
Definici칩n en la l칤nea 148 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Destroy(), Initialize() y Render()\&.
.SS "\fBMesh::Mesh\fP* SkyBoxModel::m_pMesh\fC [private]\fP"

.PP
Definici칩n en la l칤nea 145 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Initialize() y Render()\&.
.SS "vec3 SkyBoxModel::Position\fC [private]\fP"

.PP
Definici칩n en la l칤nea 142 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Render()\&.
.SS "vec3 SkyBoxModel::Rotation\fC [private]\fP"

.PP
Definici칩n en la l칤nea 143 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Render()\&.
.SS "vec3 SkyBoxModel::Scale\fC [private]\fP"

.PP
Definici칩n en la l칤nea 144 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Render()\&.
.SS "\fBShader\fP SkyBoxModel::shader\fC [private]\fP"

.PP
Definici칩n en la l칤nea 146 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Destroy(), Initialize() y Render()\&.
.SS "GLuint SkyBoxModel::VertexArrayObjectId\fC [private]\fP"

.PP
Definici칩n en la l칤nea 140 del archivo SkyBoxModel\&.h\&.
.PP
Referenciado por Destroy(), Initialize() y Render()\&.

.SH "Autor"
.PP 
Generado autom치ticamente por Doxygen para Pistasdeprofunidad del c칩digo fuente\&.
