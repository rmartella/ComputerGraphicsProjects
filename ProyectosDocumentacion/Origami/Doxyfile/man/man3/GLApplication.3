.TH "GLApplication" 3 "Martes, 26 de Mayo de 2015" "Origami" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GLApplication \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Main\&.h>\fP
.SS "M√©todos p√∫blicos"

.in +1c
.ti -1c
.RI "\fBGLApplication\fP ()"
.br
.ti -1c
.RI "\fB~GLApplication\fP ()"
.br
.ti -1c
.RI "int \fBGLMain\fP ()"
.br
.ti -1c
.RI "\fBWindowManager\fP * \fBGetWindowManager\fP ()"
.br
.ti -1c
.RI "void \fBSetWindowManager\fP (\fBWindowManager\fP *pWindowManager)"
.br
.ti -1c
.RI "\fBCamera\fP * \fBGetCamera\fP ()"
.br
.ti -1c
.RI "void \fBSetCamera\fP (\fBCamera\fP *\fBpCamera\fP)"
.br
.ti -1c
.RI "void \fBSetGRotation\fP (glm::quat \fBgRotation\fP)"
.br
.ti -1c
.RI "glm::quat \fBGetGRotation\fP ()"
.br
.ti -1c
.RI "void \fBInitialize\fP ()"
.br
.ti -1c
.RI "void \fBApplicationLoop\fP ()"
.br
.ti -1c
.RI "void \fBDestroy\fP ()"
.br
.in -1c
.SS "Atributos p√∫blicos"

.in +1c
.ti -1c
.RI "int \fBScreenWidth\fP = 1024"
.br
.ti -1c
.RI "int \fBScreenHeight\fP = 700"
.br
.in -1c
.SS "Atributos protegidos"

.in +1c
.ti -1c
.RI "\fBWindowManager\fP * \fBwindowManager\fP"
.br
.ti -1c
.RI "\fBCamera\fP * \fBcamera\fP"
.br
.ti -1c
.RI "glm::quat \fBgRotation\fP"
.br
.in -1c
.SH "Descripci√≥n detallada"
.PP 
Clase principal de la aplicacion, maneja la inicializaciÛn de la aplicaciÛn, loop de la aplicaciÛn y limpia los recursos utilizados\&. 
.PP
Definici√≥n en la l√≠nea 17 del archivo Main\&.h\&.
.SH "Documentaci√≥n del constructor y destructor"
.PP 
.SS "GLApplication::GLApplication ()\fC [inline]\fP"
Constructor default\&. 
.PP
Definici√≥n en la l√≠nea 29 del archivo Main\&.h\&.
.SS "GLApplication::~GLApplication ()\fC [inline]\fP"
Destructor\&. 
.PP
Definici√≥n en la l√≠nea 34 del archivo Main\&.h\&.
.PP
Hace referencia a Destroy()\&.
.SH "Documentaci√≥n de las funciones miembro"
.PP 
.SS "void GLApplication::ApplicationLoop ()"
Loop de la aplicaciÛn, solo se sale de esta funciÛn si el usuario pulsa Esc o cierra la ventana\&.
.PP
Loop de la aplicaci√≥n, solo se sale de esta funci√≥n si el usuario pulsa Esc o cierra la ventana\&. 
.PP
Definici√≥n en la l√≠nea 120 del archivo Main\&.cpp\&.
.PP
Hace referencia a TimeManager::CalculateFrameRate(), TimeManager::DeltaTime, f, Model::GetPosition(), Model::GetRotation(), Model::GetScale(), gRotation, TimeManager::Instance(), WindowManager::ProcessInput(), Model::Render(), Model::SetPosition(), Model::SetRotation(), Model::SetScale(), WindowManager::SwapTheBuffers() y windowManager\&.
.PP
Referenciado por GLMain()\&.
.SS "void GLApplication::Destroy ()"
MÈtodo que hace limpieza de los recursos utilizados por la aplicaciÛn\&.
.PP
M√©todo que hace limpieza de los recursos utilizados por la aplicaci√≥n\&. 
.PP
Definici√≥n en la l√≠nea 227 del archivo Main\&.cpp\&.
.PP
Hace referencia a camera, WindowManager::Destroy(), Model::Destroy() y windowManager\&.
.PP
Referenciado por GLMain() y ~GLApplication()\&.
.SS "\fBCamera\fP* GLApplication::GetCamera ()\fC [inline]\fP"
Obtiene la c·mara de la aplicaciÛn\&. 
.PP
\fBDevuelve:\fP
.RS 4
Camar\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 65 del archivo Main\&.h\&.
.PP
Hace referencia a camera\&.
.SS "glm::quat GLApplication::GetGRotation ()\fC [inline]\fP"
Obtiene el Cuaternion actual de la escena\&. 
.PP
\fBDevuelve:\fP
.RS 4
Cuaternion de la aplicaciÛn\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 88 del archivo Main\&.h\&.
.PP
Hace referencia a gRotation\&.
.PP
Referenciado por GLFWManager::ProcessInput()\&.
.SS "\fBWindowManager\fP* GLApplication::GetWindowManager ()\fC [inline]\fP"
MÈtodo que obtiene el manejador de ventanas de la aplicaciÛn\&. Este debe ser creada antes de crear la aplicaciÛn\&. 
.PP
\fBDevuelve:\fP
.RS 4
Manejador de ventanas\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 49 del archivo Main\&.h\&.
.PP
Hace referencia a windowManager\&.
.SS "int GLApplication::GLMain ()"
Funcion principal de la aplicaciÛn, debe de ser llamada en la funciÛn \fBWindowManager\fP\&. 
.PP
\fBDevuelve:\fP
.RS 4
Termino del programa\&.
.RE
.PP
Funcion principal de la aplicaci√≥n, debe de ser llamada en la funci√≥n \fBWindowManager\fP\&. 
.PP
\fBDevuelve:\fP
.RS 4
Terimno del programa\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 17 del archivo Main\&.cpp\&.
.PP
Hace referencia a ApplicationLoop(), Destroy() y Initialize()\&.
.PP
Referenciado por main()\&.
.SS "void GLApplication::Initialize ()"
InicializaciÛn de la aplicaciÛn\&.
.PP
Inicializaci√≥n de la aplicaci√≥n\&. 
.PP
Definici√≥n en la l√≠nea 34 del archivo Main\&.cpp\&.
.PP
Hace referencia a ambient(), Light::LightAtrr::ambient, ARRAY_SIZE_IN_ELEMENTS, black(), camera, f, i, WindowManager::Initialize(), Model::Initialize(), Light::LightAtrr::lightColor, Light::LightAtrr::lightPosW, Light::LightAtrr::materialDiffuse, Light::LightAtrr::materialEmissive, Light::LightAtrr::materialShininess, Light::LightAtrr::materialSpecular, Vertex3::normal, Camera::PositionCamera(), ScreenHeight, ScreenWidth, Model::SetCamera(), Model::SetLightAtrr(), Model::setNumLights(), Camera::SetPerspective(), white(), windowManager y Vertex3::xyz\&.
.PP
Referenciado por GLMain()\&.
.SS "void GLApplication::SetCamera (\fBCamera\fP *pCamera)\fC [inline]\fP"
Setter para la c·mara de la aplicaciÛn\&. 
.PP
\fBPar√°metros:\fP
.RS 4
\fIpCamera\fP c·mara que usar· aplicaciÛn\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 72 del archivo Main\&.h\&.
.PP
Hace referencia a camera y pCamera\&.
.PP
Referenciado por main()\&.
.SS "void GLApplication::SetGRotation (glm::quatgRotation)\fC [inline]\fP"
Setter para la rotaciÛn de la escena\&. 
.PP
\fBPar√°metros:\fP
.RS 4
\fIgRotation\fP Cuaternion de rotaciÛn de la escena 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 80 del archivo Main\&.h\&.
.PP
Hace referencia a gRotation\&.
.PP
Referenciado por GLFWManager::ProcessInput()\&.
.SS "void GLApplication::SetWindowManager (\fBWindowManager\fP *pWindowManager)\fC [inline]\fP"
MÈtodo que setter del manejador de ventanas de la aplicaciÛn\&. Este debe ser setteada antes de inicializar el loop\&. 
.PP
\fBPar√°metros:\fP
.RS 4
\fIpWindowManager\fP Manejador de ventanas que usar· la aplicaciÛn\&. 
.RE
.PP

.PP
Definici√≥n en la l√≠nea 57 del archivo Main\&.h\&.
.PP
Hace referencia a windowManager\&.
.PP
Referenciado por main()\&.
.SH "Documentaci√≥n de los datos miembro"
.PP 
.SS "\fBCamera\fP* GLApplication::camera\fC [protected]\fP"

.PP
Definici√≥n en la l√≠nea 115 del archivo Main\&.h\&.
.PP
Referenciado por Destroy(), GetCamera(), Initialize() y SetCamera()\&.
.SS "glm::quat GLApplication::gRotation\fC [protected]\fP"

.PP
Definici√≥n en la l√≠nea 117 del archivo Main\&.h\&.
.PP
Referenciado por ApplicationLoop(), GetGRotation() y SetGRotation()\&.
.SS "int GLApplication::ScreenHeight = 700"

.PP
Definici√≥n en la l√≠nea 24 del archivo Main\&.h\&.
.PP
Referenciado por Initialize() y GLFWManager::ReshapeGL()\&.
.SS "int GLApplication::ScreenWidth = 1024"
El ancho y alto de la ventana\&. 
.PP
Definici√≥n en la l√≠nea 23 del archivo Main\&.h\&.
.PP
Referenciado por Initialize() y GLFWManager::ReshapeGL()\&.
.SS "\fBWindowManager\fP* GLApplication::windowManager\fC [protected]\fP"

.PP
Definici√≥n en la l√≠nea 114 del archivo Main\&.h\&.
.PP
Referenciado por ApplicationLoop(), Destroy(), GetWindowManager(), Initialize() y SetWindowManager()\&.

.SH "Autor"
.PP 
Generado autom√°ticamente por Doxygen para Origami del c√≥digo fuente\&.
